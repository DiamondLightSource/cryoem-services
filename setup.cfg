[metadata]
name = cryoemservices
version = 0.0.1
description = Services for CryoEM processing
long_description = file: README.rst
author = Diamond Light Source - Data Analysis et al.
author_email = dataanalysis@diamond.ac.uk
license = BSD 3-Clause
license_files = LICENSE
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: GNU General Public License v2 (GPLv2)
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
keywords = cryoem-services
project_urls =
    GitHub = https://github.com/DiamondLightSource/cryoem-services
    Bug-Tracker = https://github.com/DiamondLightSource/cryoem-services/issues

[options]
include_package_data = True
install_requires =
    gemmi
    htcondor
    importlib_metadata
    ispyb
    marshmallow-sqlalchemy
    mrcfile
    numpy
    pillow
    plotly
    pydantic ==1.10.7
    starfile
    workflows
    zocalo
packages = find:
package_dir =
    =src
python_requires = >=3.8
zip_safe = False

[options.entry_points]
ccpem_pipeliner.jobs =
    combine_star_files_job = cryoemservices.pipeliner_plugins.combine_star_job:ProcessStarFiles
console_scripts =
    combine_star_files = cryoemservices.pipeliner_plugins.combine_star_files:main
cryoemservices.services.cluster.schedulers =
    slurm = cryoemservices.services.cluster_submission:submit_to_slurm
cryoemservices.services.images.plugins =
    mrc_to_jpeg = cryoemservices.services.images_plugins:mrc_to_jpeg
    picked_particles = cryoemservices.services.images_plugins:picked_particles
    mrc_central_slice = cryoemservices.services.images_plugins:mrc_central_slice
    mrc_to_apng = cryoemservices.services.images_plugins:mrc_to_apng
workflows.services =
    ClusterSubmission = cryoemservices.services.cluster_submission:ClusterSubmission
    CrYOLO = cryoemservices.services.cryolo:CrYOLO
    CTFFind = cryoemservices.services.ctffind:CTFFind
    DenoiseIris = cryoemservices.services.denoise_iris:DenoiseIris
    Extract = cryoemservices.services.extract:Extract
    Images = cryoemservices.services.images:Images
    ISPyB = cryoemservices.services.ispyb:EMISPyB
    MotionCorr = cryoemservices.services.motioncorr:MotionCorr
    MotionCorrSlurm = cryoemservices.services.motioncorr_slurm:MotionCorrSlurm
    NodeCreator = cryoemservices.services.node_creator:NodeCreator
    SelectClasses = cryoemservices.services.select_classes:SelectClasses
    SelectParticles = cryoemservices.services.select_particles:SelectParticles
    TomoAlign = cryoemservices.services.tomo_align:TomoAlign
    TomoAlignIris = cryoemservices.services.tomo_align_iris:TomoAlignIris
zocalo.wrappers =
    Class2D = cryoemservices.wrappers.class2d_wrapper:Class2DWrapper
    Class3D = cryoemservices.wrappers.class3d_wrapper:Class3DWrapper

[options.packages.find]
where = src

[flake8]
# Black disagrees with flake8 on a few points. Ignore those.
ignore = E203, E266, E501, W503
# E203 whitespace before ':'
# E266 too many leading '#' for block comment
# E501 line too long
# W503 line break before binary operator

max-line-length = 88

select =
    E401,E711,E712,E713,E714,E721,E722,E901,
    F401,F402,F403,F405,F541,F631,F632,F633,F811,F812,F821,F822,F841,F901,
    W191,W291,W292,W293,W602,W603,W604,W605,W606,
    # flake8-comprehensions, https://github.com/adamchainz/flake8-comprehensions
    C4,
