[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=40.6",
    "wheel",
]

[project]
name = "cryoemservices"
version = "0.3.2"
description = "Services for CryoEM processing"
readme = "README.md"
keywords = [
    "cryoem-services",
]
license = { file = "LICENSE" }
authors = [
    { name = "Diamond Light Source - Data Analysis et al.", email = "dataanalysis@diamond.ac.uk" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "defusedxml",             # CLEM workflow
    "gemmi==0.6.5",
    "healpy",
    "icebreaker-em",
    "importlib-metadata",
    "ispyb",
    "marshmallow-sqlalchemy",
    "mrcfile",
    "numpy<2",
    "pillow",
    "plotly",
    "pydantic==1.10.7",
    "readlif",                # CLEM workflow
    "starfile",
    "stomp-py==8.1",
    "tifffile",               # CLEM workflow
    "workflows",
    "zocalo==0.32",
]
optional-dependencies.dev = [
    "bump2version",
    "ipykernel",
    "pre-commit",
    "pytest",
]

urls.Bug-Tracker = "https://github.com/DiamondLightSource/cryoem-services/issues"

urls.GitHub = "https://github.com/DiamondLightSource/cryoem-services"

scripts."clem.lif_to_stack" = "cryoemservices.cli.lif_to_stack:run"

scripts."clem.tiff_to_stack" = "cryoemservices.cli.tiff_to_stack:run"

scripts."combine_star_files" = "cryoemservices.pipeliner_plugins.combine_star_files:main"

scripts."cryoemservices.reextract" = "cryoemservices.pipeliner_plugins.reextract:run"

scripts."cryoemservices.resubmit_wrapper" = "cryoemservices.cli.resubmit_wrapper:run"

entry-points."ccpem_pipeliner.jobs"."combine_star_files_job" = "cryoemservices.pipeliner_plugins.combine_star_job:ProcessStarFiles"

entry-points."cryoemservices.services.cluster.schedulers".slurm = "cryoemservices.services.cluster_submission:submit_to_slurm"

entry-points."cryoemservices.services.images.plugins"."mrc_central_slice" = "cryoemservices.services.images_plugins:mrc_central_slice"

entry-points."cryoemservices.services.images.plugins"."mrc_to_apng" = "cryoemservices.services.images_plugins:mrc_to_apng"

entry-points."cryoemservices.services.images.plugins"."mrc_to_jpeg" = "cryoemservices.services.images_plugins:mrc_to_jpeg"

entry-points."cryoemservices.services.images.plugins"."picked_particles" = "cryoemservices.services.images_plugins:picked_particles"

entry-points."workflows.services".BFactor = "cryoemservices.services.bfactor_setup:BFactor"

entry-points."workflows.services".ClusterSubmission = "cryoemservices.services.cluster_submission:ClusterSubmission"

entry-points."workflows.services".CrYOLO = "cryoemservices.services.cryolo:CrYOLO"

entry-points."workflows.services".CTFFind = "cryoemservices.services.ctffind:CTFFind"

entry-points."workflows.services".DenoiseSlurm = "cryoemservices.services.denoise_slurm:DenoiseSlurm"

entry-points."workflows.services".Extract = "cryoemservices.services.extract:Extract"

entry-points."workflows.services".ExtractClass = "cryoemservices.services.extract_class:ExtractClass"

entry-points."workflows.services".IceBreaker = "cryoemservices.services.icebreaker:IceBreaker"

entry-points."workflows.services".Images = "cryoemservices.services.images:Images"

entry-points."workflows.services".ISPyB = "cryoemservices.services.ispyb:EMISPyB"

entry-points."workflows.services".MembrainSeg = "cryoemservices.services.membrain_seg:MembrainSeg"

entry-points."workflows.services".MotionCorr = "cryoemservices.services.motioncorr:MotionCorr"

entry-points."workflows.services".MotionCorrSlurm = "cryoemservices.services.motioncorr_slurm:MotionCorrSlurm"

entry-points."workflows.services".NodeCreator = "cryoemservices.services.node_creator:NodeCreator"

entry-points."workflows.services".PostProcess = "cryoemservices.services.postprocess:PostProcess"

entry-points."workflows.services".SelectClasses = "cryoemservices.services.select_classes:SelectClasses"

entry-points."workflows.services".SelectParticles = "cryoemservices.services.select_particles:SelectParticles"

entry-points."workflows.services".TomoAlign = "cryoemservices.services.tomo_align:TomoAlign"

entry-points."workflows.services".TomoAlignSlurm = "cryoemservices.services.tomo_align_slurm:TomoAlignSlurm"

entry-points."zocalo.services.dispatcher.filters".ispyb = "cryoemservices.util.dispatcher_tools:ispyb_filter"

entry-points."zocalo.services.dispatcher.ready_for_processing".ispyb = "cryoemservices.util.dispatcher_tools:ready_for_processing"

entry-points."zocalo.wrappers".Class2D = "cryoemservices.wrappers.class2d_wrapper:Class2DWrapper"

entry-points."zocalo.wrappers".Class3D = "cryoemservices.wrappers.class3d_wrapper:Class3DWrapper"

entry-points."zocalo.wrappers".Refine3D = "cryoemservices.wrappers.refine3d_wrapper:Refine3DWrapper"

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true
zip-safe = false
[tool.setuptools.packages.find]
where = [ "src" ]

[tool.isort]
profile = "black"

[tool.flake8]
select = [
    "C4",   # flake8-comprehensions, https://github.com/adamchainz/flake8-comprehensions
    "E401",
    "E711",
    "E712",
    "E713",
    "E714",
    "E721",
    "E722",
    "E901",
    "F401",
    "F402",
    "F403",
    "F405",
    "F541",
    "F631",
    "F632",
    "F633",
    "F811",
    "F812",
    "F821",
    "F822",
    "F841",
    "F901",
    "W191",
    "W291",
    "W292",
    "W293",
    "W602",
    "W603",
    "W604",
    "W605",
    "W606",
]
ignore = [
    "E203",
    "E266",
    "E501",
    "W503",
]
max-line-length = "88"

[tool.pyproject-fmt]
inputs = "pyproject.toml"
check = true
indent = 4
keep_full_version = false
max-supported-python = "3.11"
