[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=40.6.0",
    "wheel",
]

[project]
name = "cryoemservices"
version = "0.5.3"
description = "Services for CryoEM processing"
readme = "README.md"
keywords = [
    "cryoem-services",
]
license = { file = "LICENSE" }
authors = [
    { name = "Diamond Light Source - Data Analysis et al.", email = "dataanalysis@diamond.ac.uk" },
]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "defusedxml", # CLEM workflow
    "gemmi==0.6.5",
    "healpy",
    "icebreaker-em",
    "importlib-metadata",
    "ispyb>=10.2.3",
    "marshmallow-sqlalchemy",
    "mrcfile",
    "numpy<2",
    "pillow",
    "plotly",
    "pydantic>=2",
    "readlif", # CLEM workflow
    "starfile",
    "stomp-py==8.1.0",
    "tifffile", # CLEM workflow
    "workflows",
    "zocalo>=1",
]
[project.optional-dependencies]
dev = [
    "bump-my-version",
    "ipykernel",
    "pre-commit",
    "pytest",
    "pytest-datafiles",
    "pytest-mock",
]
[project.urls]
    Bug-Tracker = "https://github.com/DiamondLightSource/cryoem-services/issues"
    GitHub = "https://github.com/DiamondLightSource/cryoem-services"
[project.scripts]
    "clem.align_and_merge" = "cryoemservices.cli.clem_align_and_merge:run"
    "clem.lif_to_stack" = "cryoemservices.cli.clem_lif_to_stack:run"
    "clem.tiff_to_stack" = "cryoemservices.cli.clem_tiff_to_stack:run"
    "combine_star_files" = "cryoemservices.pipeliner_plugins.combine_star_files:main"
    "cryoemservices.find_symmetry" = "cryoemservices.pipeliner_plugins.symmetry_finder:run"
    "cryoemservices.reextract" = "cryoemservices.pipeliner_plugins.reextract:run"
    "cryoemservices.resubmit_wrapper" = "cryoemservices.cli.resubmit_wrapper:run"
    "relipy.link" = "cryoemservices.cli.project_linker:run"
[project.entry-points."ccpem_pipeliner.jobs"]
    "combine_star_files_job" = "cryoemservices.pipeliner_plugins.combine_star_job:ProcessStarFiles"
[project.entry-points."cryoemservices.services.cluster.schedulers"]
    slurm = "cryoemservices.services.cluster_submission:submit_to_slurm"
[project.entry-points."cryoemservices.services.images.plugins"]
    "mrc_central_slice" = "cryoemservices.services.images_plugins:mrc_central_slice"
    "mrc_to_apng" = "cryoemservices.services.images_plugins:mrc_to_apng"
    "mrc_to_jpeg" = "cryoemservices.services.images_plugins:mrc_to_jpeg"
    "picked_particles" = "cryoemservices.services.images_plugins:picked_particles"
[project.entry-points."workflows.services"]
    BFactor = "cryoemservices.services.bfactor_setup:BFactor"
    CTFFind = "cryoemservices.services.ctffind:CTFFind"
    ClusterSubmission = "cryoemservices.services.cluster_submission:ClusterSubmission"
    CrYOLO = "cryoemservices.services.cryolo:CrYOLO"
    DenoiseSlurm = "cryoemservices.services.denoise_slurm:DenoiseSlurm"
    Extract = "cryoemservices.services.extract:Extract"
    ExtractClass = "cryoemservices.services.extract_class:ExtractClass"
    ISPyB = "cryoemservices.services.ispyb:EMISPyB"
    IceBreaker = "cryoemservices.services.icebreaker:IceBreaker"
    Images = "cryoemservices.services.images:Images"
    MembrainSeg = "cryoemservices.services.membrain_seg:MembrainSeg"
    MotionCorr = "cryoemservices.services.motioncorr:MotionCorr"
    NodeCreator = "cryoemservices.services.node_creator:NodeCreator"
    PostProcess = "cryoemservices.services.postprocess:PostProcess"
    SelectClasses = "cryoemservices.services.select_classes:SelectClasses"
    SelectParticles = "cryoemservices.services.select_particles:SelectParticles"
    TomoAlign = "cryoemservices.services.tomo_align:TomoAlign"
    TomoAlignSlurm = "cryoemservices.services.tomo_align_slurm:TomoAlignSlurm"
[project.entry-points."zocalo.services.dispatcher.filters"]
    ispyb = "cryoemservices.util.dispatcher_tools:ispyb_filter"
[project.entry-points."zocalo.services.dispatcher.ready_for_processing"]
    ispyb = "cryoemservices.util.dispatcher_tools:ready_for_processing"
[project.entry-points."zocalo.wrappers"]
    CLEMLIFToStack = "cryoemservices.wrappers.clem_process_raw_lifs:LIFToStackWrapper"
    CLEMTIFFToStack = "cryoemservices.wrappers.clem_process_raw_tiffs:TIFFToStackWrapper"
    Class2D = "cryoemservices.wrappers.class2d_wrapper:Class2DWrapper"
    Class3D = "cryoemservices.wrappers.class3d_wrapper:Class3DWrapper"
    Refine3D = "cryoemservices.wrappers.refine3d_wrapper:Refine3DWrapper"

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true
zip-safe = false
[tool.setuptools.packages.find]
where = [ "src" ]

[tool.isort]
profile = "black"

[tool.flake8]
select = [
    "C4",   # flake8-comprehensions, https://github.com/adamchainz/flake8-comprehensions
    "E401",
    "E711",
    "E712",
    "E713",
    "E714",
    "E721",
    "E722",
    "E901",
    "F401",
    "F402",
    "F403",
    "F405",
    "F541",
    "F631",
    "F632",
    "F633",
    "F811",
    "F812",
    "F821",
    "F822",
    "F841",
    "F901",
    "W191",
    "W291",
    "W292",
    "W293",
    "W602",
    "W603",
    "W604",
    "W605",
    "W606",
]
ignore = [
    "E203",
    "E266",
    "E501",
    "W503",
]
max-line-length = "88"

[tool.pyproject-fmt]
indent = 4
keep_full_version = true
max_supported_python = "3.11"
