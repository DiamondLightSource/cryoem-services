# This Dockerfile is used for Relion class selection
# First stage creates a conda environment
FROM rockylinux:8 AS conda-build

# Set up conda environment
RUN curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
RUN bash Miniforge3-$(uname)-$(uname -m).sh -b -p "conda"

RUN source "/conda/etc/profile.d/conda.sh" && conda install -c conda-forge conda-pack
RUN source "/conda/etc/profile.d/conda.sh" && source "/conda/etc/profile.d/mamba.sh" && \
    mamba create -c conda-forge -p /install/pythonenv python=3.11 pip libtiff=4.4.0 --override-channels -y
RUN source "/conda/etc/profile.d/conda.sh" && conda activate /install/pythonenv && \
    pip install torch==2.0.1 torchvision==0.15.2 --index-url https://download.pytorch.org/whl/cpu

# Install cryoem-services and pipeliner
RUN mkdir /install/cryoem-services
COPY packages/cryoem-services /install/cryoem-services
RUN mkdir /install/ccpem-pipeliner
COPY packages/ccpem-pipeliner /install/ccpem-pipeliner
RUN source "/conda/etc/profile.d/conda.sh" && conda activate /install/pythonenv && \
    pip install /install/ccpem-pipeliner && pip install /install/cryoem-services

# Install relion classranker
RUN mkdir /install/relion-classranker
COPY packages/relion-classranker /install/relion-classranker
RUN source "/conda/etc/profile.d/conda.sh" && conda activate /install/pythonenv && \
    pip install /install/relion-classranker

# Pack the environment
RUN /conda/bin/conda-pack -p /install/pythonenv -o /tmp/env.tar.gz
RUN mkdir /install/venv
RUN tar -xzf /tmp/env.tar.gz -C /install/venv
RUN source "/conda/etc/profile.d/conda.sh" && conda activate /install/venv && /install/venv/bin/conda-unpack


# Second stage builds relion
FROM rockylinux:8 AS relion-build

# Copy python environment
COPY --from=conda-build --chown="${userid}":"${groupid}" /install/venv /install/venv
ENV PATH="/install/venv/bin:${PATH}"

# Get required build packages and libraries
RUN yum install gcc gcc-c++ cmake openmpi -y
RUN yum install fftw-devel libtiff-devel libpng-devel libjpeg-devel zlib-devel -y

# Build Relion - need to be on the ver5.0-mc-devolve tag
RUN mkdir -p /install/relion5.0
COPY packages/relion_fork /install/relion_src
RUN mkdir /install/relion_src/build

RUN mkdir /torch_home

RUN cmake -DCMAKE_INSTALL_PREFIX=/install/relion5.0 -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DMPI_C_COMPILER=/usr/lib64/openmpi/bin/mpicc -DMPI_CXX_COMPILER=/usr/lib64/openmpi/bin/mpicxx -DMPI_C_LIBRARIES=/usr/lib64/openmpi/lib/libmpi.so -DMPI_CXX_LIBRARIES=/usr/lib64/openmpi/lib/libmpi.so -DGUI=OFF -DALTCPU=ON -DPYTHON_EXE_PATH=/install/venv/bin/python -DTORCH_HOME_PATH=/torch_home -B/install/relion_src/build -S/install/relion_src
RUN make --directory=/install/relion_src/build/ install


# Third stage combines the Relion and conda builds
FROM rockylinux:8

# Create EM user
ARG groupid
ARG userid
ARG groupname
RUN groupadd -r -g "${groupid}" "${groupname}" && useradd -r -M "${groupname}" -u "${userid}" -g "${groupname}"

# Install libraries for Relion
RUN yum install openmpi fftw-devel libtiff-devel libpng-devel libjpeg-devel zlib-devel -y

# Copy Relion
COPY --from=relion-build --chown="${userid}":"${groupid}" /install/relion5.0 /install/relion5.0
ENV PATH="/install/relion5.0/bin:${PATH}"

# Copy python environment (from Relion build)
COPY --from=relion-build --chown="${userid}":"${groupid}" /install/venv /install/venv
ENV PATH="/install/venv/bin:${PATH}"

# Copy Relion torch models
COPY --from=relion-build --chown="${userid}":"${groupid}" /torch_home /torch_home
ENV RELION_PYTHON_EXECUTABLE="/install/venv/bin/python"
ENV TORCH_HOME="/torch_home"
